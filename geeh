#!/bin/bash
## 12-02-2012 pdq

## initalize options
quiet=; _backup=; _clone=; _create_repo=; _create_submodule=; _msg=; _interactive_menu=

# set xdg config directory
if [ -n "${XDG_CONFIG_DIRS}" ]; then
    xdg_config=($(echo "${XDG_CONFIG_DIRS}" | awk -F ":" '{for (i=1; i<=NF; i++) print $i}' ))
    for i in ${xdg_config[@]}; do
        [ -d "$i" ] && export XDG_CONFIG_DIRS=$i && break
    done
fi

# config files
configdir="${XDG_CONFIG_DIRS:-/etc/xdg}/geeh"
userconfigdir="${XDG_CONFIG_HOME:-${HOME}/.config}/geeh"
. "$configdir/geeh.conf"
[ -r "$userconfigdir/geeh.conf" ] && . "$userconfigdir/geeh.conf"

# creating backups/github directory on host if not exist
mkdir -p ${dev_directory}

geeh_check() {
	# sanity check
	if [ $(id -u) -eq 0 ]; then
	   echo "Do not run me as root! =)"
	   exit 1
	fi

	if [ ! -f /usr/bin/git ]; then
		dep_pkg=git
		do_install
	fi

	if [ ! -f /usr/bin/hub ]; then
		dep_pkg=hub
		do_install
	fi

	if [ ! -f /usr/bin/git ] || [ ! -f /usr/bin/hub ]; then
		echo "Exiting..."
		exit 0
	fi
}

ask_something() {
	echo -ne $question
	while read -r -n 1 -s yn; do
		if [[ $yn = [YyNn] ]]; then
			[[ $yn = [Yy] ]] && return=0
			[[ $yn = [Nn] ]] && return=1
			break
		fi
	done
	return $return
}

do_install() {
	echo "FATAL ERROR: ${dep_pkg} is not installed"
	question="Install ${dep_pkg} (Y/N)?\n"
	if ask_something; then
		echo "sudo pacman -Syu ${dep_pkg}";
		sudo pacman -Syu ${dep_pkg}
	else
		echo "Exiting..."
		exit 0
	fi
}

git_backup(){
	for i in $(eval echo {1..$_repo_count})
	do
		__user=$(eval echo $(echo '${'_repo$i[1]'}'))
		__repo=$(eval echo $(echo '${'_repo$i[2]'}'))
		__cmnd=$(eval echo $(echo '${'_repo$i[3]'}'))
		eval "${__cmnd}"
		cd ${dev_directory}${__repo}
		#pwd
		git add -A
		if [ "${_msg}" = "" ]; then
			_commit_msg="updated ${__repo} to current working copy"
		else
			_commit_msg="${_msg}"
		fi
		echo ${_commit_msg}
		git commit -m "${_commit_msg}"
		git push origin master
		_commit_msg=""
		echo " ==> ${__repo} repo pushed to Github."
		sleep 1s
	done
	echo " ==> All repos pushed to Github. Goodbye!"
}

geeh_help() {
	echo  "Usage: $(basename $0) [-{b|V|q}][-{c|r|s|m}] [user/{repo|submodule}|message]" 1>&2
	exit 0
}

## start script execution ##
geeh_check
while getopts "bm:c:r:s:qhVN" opt
do
	_nocmd="w00t"
	case $opt in
		V) echo "$(basename $0): Version: 0.1 Date: 2012/12/02 Author: pdq URL: https://github.com/idk/geeh"
		   exit 0;;
		b) _backup=yes;;
		m) _msg=$OPTARG;;
		c) _clone=$OPTARG;;
		r) _create_repo=$OPTARG;;
		s) _create_submodule=$OPTARG;;
		q) _quiet=-q;;
		N) _interactive_menu=yes;;
		h) geeh_help;;
	esac
done

if [ -z "${_nocmd}" ]; then
	geeh_help
fi
 
# getopts
if [ -n "${_create_submodule}" ]; then
	echo "Adding submodule..."
	hub submodule add ${_create_submodule} ${_quiet}
fi

if [ -n "${_create_repo}" ]; then
	echo "create must be run from INSIDE a git repository"
	pwd
	question="Create repository here? (Y/N)?\n"
	if ask_something; then
		echo "Initializing git repo..."
		touch README.md
		git init
		git add -A
		git commit -m "first commit"
	fi

	if [ -d ".git" ]; then
		hub create ${_create_repo} ${_quiet}
		echo "This may take up to 10 seconds..."
		sleep 10s
		git remote add origin git@github.com:${_create_repo}.git
		git push -u origin master
		echo "git repository '${_create_repo}' created at https://github.com/${_create_repo}"
	fi
fi

if [ -n "${_clone}" ]; then
	hub clone ${_clone} ${_quiet}
fi

if [ -n "${_backup}" ]; then
	git_backup
fi

exit 0